package com.sunshulkers;

import com.sunshulkers.commands.AutoCollectCommand;
import com.sunshulkers.commands.SunShulkersCommand;
import com.sunshulkers.listeners.AnvilListener;
import com.sunshulkers.listeners.AutoCollectListener;
import com.sunshulkers.listeners.ShulkerListener;
import com.sunshulkers.listeners.UpdateNotifyListener;
import com.sunshulkers.managers.AutoCollectManager;
import com.sunshulkers.managers.ConfigManager;
import com.sunshulkers.managers.CooldownManager;
import com.sunshulkers.managers.DatabaseManager;
import com.sunshulkers.utils.MessageUtils;
import com.sunshulkers.utils.UpdateChecker;
import net.kyori.adventure.platform.bukkit.BukkitAudiences;
import org.bukkit.event.Listener;
import org.bukkit.plugin.java.JavaPlugin;

public class SunShulkersPlugin extends JavaPlugin {
    
    private static SunShulkersPlugin instance;
    private ConfigManager configManager;
    private CooldownManager cooldownManager;
    private MessageUtils messageUtils;
    private BukkitAudiences adventure;
    private AutoCollectManager autoCollectManager;
    private DatabaseManager databaseManager;
    private UpdateChecker updateChecker;

    @Override
    public void onEnable() {
        instance = this;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Adventure
        this.adventure = BukkitAudiences.create(this);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        this.configManager = new ConfigManager(this);
        // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ - –≤–∞–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è ConfigManager
        configManager.loadConfig();
        
        this.cooldownManager = new CooldownManager();
        this.databaseManager = new DatabaseManager(this);
        this.autoCollectManager = new AutoCollectManager(this);
        this.messageUtils = new MessageUtils(this);
        this.updateChecker = new UpdateChecker(this);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if (!databaseManager.initialize()) {
            getLogger().severe("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö! –ü–ª–∞–≥–∏–Ω –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω.");
            getServer().getPluginManager().disablePlugin(this);
            return;
        }
        
        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π
        getServer().getPluginManager().registerEvents(new ShulkerListener(this), this);
        getServer().getPluginManager().registerEvents(new AnvilListener(this), this);
        getServer().getPluginManager().registerEvents(new AutoCollectListener(this), this);
        getServer().getPluginManager().registerEvents(new UpdateNotifyListener(this), this);
        
        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
        getCommand("sunshulkers").setExecutor(new SunShulkersCommand(this));
        getCommand("autocollect").setExecutor(new AutoCollectCommand(this));
        
        // –ö—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
        printStartupMessage();
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        updateChecker.checkForUpdates().thenRun(() -> {
            // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å –≤ –∫–æ–Ω—Å–æ–ª—å
            updateChecker.logUpdateStatus();
            // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–Ω–ª–∞–π–Ω –∞–¥–º–∏–Ω–æ–≤
            updateChecker.notifyOnlineAdmins();
        });
        
        getLogger().info("SunShulkers –ø–ª–∞–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!");
    }
    
    /**
     * –í—ã–≤–æ–¥–∏—Ç –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –ø–ª–∞–≥–∏–Ω–∞
     */
    private void printStartupMessage() {
        getLogger().info("SunShulkers –∑–∞–≥—Ä—É–∂–µ–Ω! –í–µ—Ä—Å–∏—è: " + getDescription().getVersion() +
                ", –ê–≤—Ç–æ—Ä: " + String.join(", ", getDescription().getAuthors()));
        getLogger().info("–ö—É–ª–¥–∞—É–Ω: " + configManager.getCooldown() + " —Å–µ–∫., –ê–≤—Ç–æ—Å–±–æ—Ä: " +
                (configManager.isAutoCollectEnabled() ? "–í–∫–ª" : "–í—ã–∫–ª") +
                ", –ó–∞–ø—Ä–µ—â–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: " + configManager.getBlacklistedItems().size());
    }
    
    @Override
    public void onDisable() {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if (this.databaseManager != null) {
            this.databaseManager.close();
        }
        
        if (this.adventure != null) {
            this.adventure.close();
            this.adventure = null;
        }
        
        // –ö—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–∏—è
        printShutdownMessage();
    }
    
    /**
     * –í—ã–≤–æ–¥–∏—Ç –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ –ø–ª–∞–≥–∏–Ω–∞
     */
    private void printShutdownMessage() {
        getLogger().info("");
        getLogger().info("üëã  –ü–ª–∞–≥–∏–Ω ¬ßeSunShulkers –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è...");
        getLogger().info("üìä  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏:");
        getLogger().info("  ‚îú –í–µ—Ä—Å–∏—è: " + getDescription().getVersion());
        getLogger().info("  ‚îú –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
        getLogger().info("üíæ  –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö");
        getLogger().info("‚úÖ  –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ SunShulkers!");
        getLogger().info("");
    }

    public static SunShulkersPlugin getInstance() {
        return instance;
    }

    public BukkitAudiences getAdventure() {
        return this.adventure;
    }

    public ConfigManager getConfigManager() {
        return configManager;
    }

    public CooldownManager getCooldownManager() {
        return cooldownManager;
    }

    public MessageUtils getMessageUtils() {
        return messageUtils;
    }

    public AutoCollectManager getAutoCollectManager() {
        return autoCollectManager;
    }

    public DatabaseManager getDatabaseManager() {
        return databaseManager;
    }
    
    public UpdateChecker getUpdateChecker() {
        return updateChecker;
    }
}
